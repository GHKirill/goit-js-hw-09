{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAGA,MAAMC,EAAUC,SAASC,cAAc,QACjCC,EAAM,CACVC,KAAMH,SAASC,cAAc,QAC7BG,OAAQJ,SAASK,iBAAiB,UAKpC,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KACLC,KAAKC,SAAW,GAEpCC,YAAW,IAAMJ,EAAQ,C,SAAEH,E,MAAUC,KAAUA,GAE/CM,YAAW,IAAMH,EAAO,C,SAAEJ,E,MAAUC,KAAUA,EAAM,G,CAR1D,IAAIN,EAAIE,QAAQW,SAAQC,GAASA,EAAKC,MAAMC,MAAQ,UAYpDnB,EAAQoB,iBAAiB,UAEzB,SAAwBC,GACtB,MAAMC,EAAaC,OAAOpB,EAAIC,KAAKK,MAAMe,OACnCC,EAAYF,OAAOpB,EAAIC,KAAKsB,KAAKF,OACjCG,EAAiBJ,OAAOpB,EAAIC,KAAKwB,OAAOJ,OAC9CK,QAAQC,IAAIH,EAAgBL,EAAYG,GACxCJ,EAAMU,iBACN,IAAK,IAAIC,EAAI,EAAGA,EAAIL,EAAgBK,GAAK,EAAG,CAG1CzB,EAFeyB,EAAI,EACPV,EAAaG,EAAYO,GAElCC,MAAK,EAACzB,SAAEA,EAAQC,MAAEA,MAEjByB,EAAApC,GAASqC,OAAOC,QAAQ,qBAAqB5B,QAAeC,MAAU,IAEvE4B,OAAM,EAAC7B,SAAEA,EAAQC,MAAEA,MAElByB,EAAApC,GAASqC,OAAOG,QAAQ,oBAAoB9B,QAAeC,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nimport 'notiflix/dist/notiflix-3.2.6.min.css';\n\nconst refForm = document.querySelector('form');\nconst ref = {\n  form: document.querySelector('form'),\n  inputs: document.querySelectorAll('input'),\n};\n\n[...ref.inputs].forEach(item => (item.style.width = '100px'));\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    if (shouldResolve) {\n      setTimeout(() => resolve({ position, delay }), delay);\n    } else {\n      setTimeout(() => reject({ position, delay }), delay);\n    }\n  });\n}\nrefForm.addEventListener('submit', createPromises);\n\nfunction createPromises(event) {\n  const firstDelay = Number(ref.form.delay.value);\n  const stepDelay = Number(ref.form.step.value);\n  const promisesAmount = Number(ref.form.amount.value);\n  console.log(promisesAmount, firstDelay, stepDelay);\n  event.preventDefault();\n  for (let i = 0; i < promisesAmount; i += 1) {\n    let position = i + 1;\n    let delay = firstDelay + stepDelay * i;\n    createPromise(position, delay)\n      .then(({ position, delay }) => {\n        //console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        //console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$refForm","document","querySelector","$47d4ff9957288465$var$ref","form","inputs","querySelectorAll","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","Math","random","setTimeout","forEach","item","style","width","addEventListener","event","firstDelay","Number","value","stepDelay","step","promisesAmount","amount","console","log","preventDefault","i","then","$parcel$interopDefault","Notify","success","catch","failure"],"version":3,"file":"03-promises.b0839231.js.map"}